name: Java CI with Maven

on:
  pull_request_target:
    branches:
      - "*"

jobs:
  debug:
    runs-on: ubuntu-latest
    steps:
      - name: Print PR Creator
        run: |
          echo "PR Creator: ${{ github.event.pull_request.user.login }}"
      - name: Print Actor
        run: |
          echo "Actor: ${{ github.actor }}"

  build:
    runs-on: ubuntu-latest
    needs: debug
    strategy:
      matrix:
        java-version: [17, 21]
    steps:
      - name: Check out code
        uses: actions/checkout@v4
      - name: Clear Maven Cache
        uses: ./.github/actions/clear-maven-cache
      - name: Setup JDK
        uses: ./.github/actions/setup-jdk
        with:
          java-version: ${{ matrix.java-version }}
      - name: Build with Maven
        run: mvn clean compile package

  test:
    runs-on: ubuntu-latest
    needs: [debug, build]
    if: ${{ github.event.pull_request.user.login != 'dependabot[bot]' }}
    strategy:
      matrix:
        java-version: [17, 21]
    steps:
      - name: Check out code
        uses: actions/checkout@v4
      - name: Setup JDK
        uses: ./.github/actions/setup-jdk
        with:
          java-version: ${{ matrix.java-version }}
      - name: Run Tests with Maven
        run: mvn test

  lint:
    runs-on: ubuntu-latest
    needs: [debug, build]
    if: ${{ github.event.pull_request.user.login != 'dependabot[bot]' }}
    strategy:
      matrix:
        java-version: [17, 21]
    steps:
      - name: Check out code
        uses: actions/checkout@v4
      - name: Setup JDK
        uses: ./.github/actions/setup-jdk
        with:
          java-version: ${{ matrix.java-version }}
      - name: Run Lint with Maven
        run: mvn checkstyle:check

  auto-approve:
    runs-on: ubuntu-latest
    needs: debug
    if: ${{ github.event.pull_request.user.login == 'dependabot[bot]' }}
    steps:
      - name: Auto approve Dependabot PR
        uses: hmarr/auto-approve-action@v2
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}

  auto-merge:
    runs-on: ubuntu-latest
    needs: [debug, auto-approve]
    if: ${{ github.event.pull_request.user.login == 'dependabot[bot]' }}
    steps:
      - name: Check PR Status
        id: pr_status
        run: |
          status_count=$(curl -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
                             -H "Accept: application/vnd.github.v3+json" \
                             https://api.github.com/repos/${{ github.repository }}/commits/${{ github.sha }}/status \
                             | jq -r '[.statuses[] | select(.state != "success")] | length')
          echo "::set-output name=status_count::$status_count"
      - name: Print Pending Statuses
        run: |
          echo "Pending statuses count: ${{ steps.pr_status.outputs.status_count }}"
      - name: Auto-merge PR if all checks passed
        if: ${{ steps.pr_status.outputs.status_count == '0' }}
        uses: actions/github-script@v3
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const pr_number = context.issue.number;
            const pr = await github.pulls.get({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: pr_number,
            });
            console.log('PR Data:', pr.data);
            if (pr.data.state === 'open' && pr.data.mergeable_state === 'clean') {
              const merge = await github.pulls.merge({
                owner: context.repo.owner,
                repo: context.repo.repo,
                pull_number: pr_number,
              });
              console.log('Merge Result:', merge.data);
            } else {
              console.log('PR not in a mergeable state:', pr.data.mergeable_state);
            }
