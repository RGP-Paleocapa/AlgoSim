name: Java CI with Maven

on:
  pull_request:
    branches:
      - "main"
      - "dependabot/**"

jobs:
  debug:
    runs-on: ubuntu-latest
    steps:
      - name: Print Triggering Actor
        run: |
          echo "Triggering Actor: ${{ github.triggering_actor }}"
      - name: Print Actor
        run: |
          echo "Actor: ${{ github.actor }}"

  build:
    runs-on: ubuntu-latest
    needs: debug
    strategy:
      matrix:
        java-version: [17, 21]
    steps:
      - name: Check out code
        uses: actions/checkout@v4
      - name: Clear Maven Cache
        uses: ./.github/actions/clear-maven-cache
      - name: Setup JDK
        uses: ./.github/actions/setup-jdk
        with:
          java-version: ${{ matrix.java-version }}
      - name: Build with Maven
        run: mvn clean compile package
        shell: bash

  test:
    runs-on: ubuntu-latest
    needs: [debug, build]
    if: ${{ github.triggering_actor != 'dependabot[bot]' }}
    strategy:
      matrix:
        java-version: [17, 21]
    steps:
      - name: Check out code
        uses: actions/checkout@v4
      - name: Setup JDK
        uses: ./.github/actions/setup-jdk
        with:
          java-version: ${{ matrix.java-version }}
      - name: Run Tests with Maven
        run: mvn test
        shell: bash

  lint:
    runs-on: ubuntu-latest
    needs: [debug, build]
    if: ${{ github.triggering_actor != 'dependabot[bot]' }}
    strategy:
      matrix:
        java-version: [17, 21]
    steps:
      - name: Check out code
        uses: actions/checkout@v4
      - name: Setup JDK
        uses: ./.github/actions/setup-jdk
        with:
          java-version: ${{ matrix.java-version }}
      - name: Run Lint with Maven
        run: mvn checkstyle:check
        shell: bash

  auto-approve:
    runs-on: ubuntu-latest
    needs: debug
    if: ${{ github.triggering_actor == 'dependabot[bot]' }}
    steps:
      - name: Auto approve Dependabot PR
        uses: hmarr/auto-approve-action@v2
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}

  auto-merge:
    runs-on: ubuntu-latest
    needs: [debug, auto-approve]
    if: ${{ github.triggering_actor == 'dependabot[bot]' }}
    steps:
      - name: Merge Dependabot PR
        uses: actions/github-script@v3
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const pr_number = context.issue.number;
            const pr = await github.pulls.get({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: pr_number,
            });
            if (pr.data.state === 'open') {
              await github.pulls.merge({
                owner: context.repo.owner,
                repo: context.repo.repo,
                pull_number: pr_number,
              });
            }

  # generate-branch-and-commit:
  #   runs-on: ubuntu-latest
  #   if: ${{ github.triggering_actor == 'dependabot[bot]' }}
  #   steps:
  #     - name: Check out code
  #       uses: actions/checkout@v4
  #     - name: Generate Branch Name
  #       id: generate_branch_name
  #       run: |
  #         echo "branch-name=dependabot-update-$(date +'%Y%m%d%H%M%S')" >> $GITHUB_ENV
  #     - name: Generate Commit Message
  #       id: generate_commit_message
  #       run: |
  #         echo "commit-message=deps(deps): bump org.apache.maven.plugins:maven-clean-plugin from 3.3.2 to 3.4.0 $(date +'%Y%m%d%H%M%S')" >> $GITHUB_ENV
  #     - name: Print Branch Name and Commit Message
  #       run: |
  #         echo "Branch Name: $branch-name"
  #         echo "Commit Message: $commit-message"
